from flask import Flask, render_template, request, send_file
from flask_sqlalchemy import SQLAlchemy
from reportlab.lib.pagesizes import letter
from reportlab.lib.units import inch
from reportlab.pdfgen import canvas

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://scott:tiger@localhost/project'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/sign')
def sign():
    return render_template("sign.html")
employee_name = ""
@app.route('/invoice', methods=['POST'])
def invoice():
    global employee_name
    employee_name = request.form['name']

    return render_template('invoice.html')
    # return render_template('invoice.html', name=name)
num_items = 0
invoice_number = ""
customer_name = ""
@app.route('/details', methods=['POST'])
def details():
    global invoice_number,customer_name,num_items
    invoice_number = request.form['invoice_number']
    customer_name = request.form['customer_name']
    num_items = int(request.form['num_items'])

    return render_template('items.html',num_items=num_items)

@app.route('/process', methods=['POST'])
def process():

    items = []
    for i in range(num_items):
        item_name = request.form.get('item_name_' + str(i+1))
        price = request.form.get('item_price_' + str(i+1))
        items.append((item_name, price))

    # Create a new PDF object
    pdf = canvas.Canvas("invoice.pdf", pagesize=letter)

    # Draw the title of the invoice
    pdf.setFont("Helvetica-Bold", 24)
    pdf.drawString(1 * inch, 10 * inch, "Invoice")

    # Draw the invoice number and customer name
    pdf.setFont("Helvetica", 12)
    pdf.drawString(1 * inch, 9.5 * inch, f"Invoice number: {invoice_number}")
    pdf.drawString(1 * inch, 9.25 * inch, f"Customer name: {customer_name}")

    # Draw the table of items and their prices
    pdf.setFont("Helvetica", 12)
    pdf.drawString(1 * inch, 8 * inch, "Items")
    pdf.drawString(4 * inch, 8 * inch, "Price")

    row_height = 0.25 * inch
    y = 7.75 * inch
    for item, price in items:
        pdf.drawString(1 * inch, y, item)
        pdf.drawString(4 * inch, y, f"Rs.{price}")
        # pdf.drawString(4 * inch, y, f"Rs.{price:.2f}")
        y -= row_height

    # Draw the total amount due
    y = y - 0.5 * inch
    total = sum([price for item, price in items])
    pdf.setFont("Helvetica-Bold", 12)
    pdf.drawString(1 * inch, y, f"Total amount due: Rs.{total:.2f}")

    # Draw the employee name who generate invoice
    y = y - 0.75 * inch
    pdf.setFont("Helvetica", 10)
    pdf.drawString(1 * inch, y, f"Invoice generated by employee {employee_name}")

    # Save the PDF file
    pdf.save()

    return send_file("output.pdf", as_attachment=True)
    # # return render_template('invoice.html', name=name)

if __name__ == '__main__':
    app.run(debug=True)